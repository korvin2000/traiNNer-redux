# general settings
name: 4xNomos8kSC_multiscale
model_type: AESRGANModel
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0

# ----------------- options for synthesizing training data in RealESRGANModel ----------------- #
# USM the ground-truth
l1_gt_usm: False
percep_gt_usm: False
gan_gt_usm: False
try_autoamp_g: False #enable amp Automatic mixed precision for network_g. if loss inf or nan or error just set to False
try_autoamp_d: False #enable amp Automatic mixed precision for network_d. if loss inf or nan or error just set to False

# the first degradation process
resize_prob: [0.2, 0.7, 0.1]
resize_range: [0.15, 1.5]
gaussian_noise_prob: 0
noise_range: [0, 0]
poisson_scale_range: [0, 0]
gray_noise_prob: 0
jpeg_range: [75, 95]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.3, 0.4, 0.3]
resize_range2: [0.3, 1.2]
gaussian_noise_prob2: 0
noise_range2: [0, 0]
poisson_scale_range2: [0, 0]
gray_noise_prob2: 0
jpeg_range2: [75, 95]

gt_size: 256
queue_size: 180

# dataset and data loader settings
datasets:
  train:
    name: Nomos8k_sfw
    type: RealESRGANDataset
    dataroot_gt: /home/phips/Documents/datasets/nomos8k_sfw/nomos8k_sfw
    meta_info: /home/phips/Documents/datasets/nomos8k_sfw/nomos8k_sfw_meta_info.txt
    io_backend:
      type: disk

    blur_kernel_size: 12
    kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob: [0.65, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 9
    kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
    kernel_prob2: [0.65, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.8

    gt_size: 256
    use_hflip: True
    use_rot: True

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 5
    batch_size_per_gpu: 6
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: validation
    type: PairedImageDataset
    dataroot_gt: /home/phips/Documents/datasets/nomos8k_sfw/val_DONOTUSE_hr
    dataroot_lq: /home/phips/Documents/datasets/nomos8k_sfw/val_lr
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32


network_d:
  type: multiscale
  num_in_ch: 3
  num_feat: 64
  num_D: 2

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: /home/phips/Documents/traiNNer-redux-FJ/experiments/pretrained_models/4xNomos8kSC.pth
  param_key_g: params_ema
  strict_load_g: true
  pretrain_network_d:
  param_key_d: params
  strict_load_d: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [200000]
    gamma: 0.5

  total_iter: 200000
  warmup_iter: -1  # no warm up

train:
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 1.5e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: AdamW
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [200000]
    gamma: 0.5

  total_iter: 200000
  warmup_iter: -1

  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      "conv1_2": 0.1
      "conv2_2": 0.1
      "conv3_4": 1
      "conv4_4": 1
      "conv5_4": 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1
  contextual_opt:
    type: ContextualLoss
    loss_weight: 0.5
    layer_weights:
      "conv_3_2": 1
      "conv_4_2": 1
    max_1d_size: 64
    distance_type: "cosine"
    calc_type: "regular"
    z_norm: false
    crop_quarter: false,
    b: 1.0
    band_width: 0.5
    use_vgg: true,
    net: vgg19
  color_opt:
    type: ColorLoss
    criterion: "l1"
    loss_weight: 1.0
  avg_opt:
    type: AverageLoss
    criterion: "l1"
    loss_weight: 1.0
    scale: 4
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0

val:
  val_freq: 1000
  save_img: true

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: 1000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
