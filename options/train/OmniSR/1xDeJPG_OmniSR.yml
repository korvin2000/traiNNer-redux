name: 1xDeJPG_OmniSR_OTF
model_type: OmniSRGANModel
scale: 1
num_gpu: auto # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0

l1_gt_usm: False
percep_gt_usm: False
gan_gt_usm: False

resize_prob: [0.2, 0.7, 0.1]
resize_range: [0.15, 1.5]
jpeg_range: [30, 95]
gaussian_noise_prob: 0
noise_range: [0, 0]
poisson_scale_range: [0, 0]
gray_noise_prob: 0

second_blur_prob: 0.3
resize_prob2: [0.3, 0.4, 0.3]
resize_range2: [0.3, 1.2]
jpeg_range2: [25, 90]
gaussian_noise_prob2: 0
noise_range2: [0, 0]
poisson_scale_range2: [0, 0]
gray_noise_prob2: 0

gt_size: 32
queue_size: 180

datasets:
  train:
    name: Nomos8k_sfw_jpg20_95
    type: RealESRGANDataset
    dataroot_gt: /home/phips/Documents/datasets/nomos8k_sfw/nomos8k_sfw
    meta_info: /home/phips/Documents/datasets/nomos8k_sfw/nomos8k_sfw_meta_info.txt
    io_backend:
      type: disk
        
    blur_kernel_size: 3
    kernel_list: ['iso', 'generalized_iso', 'plateau_iso']
    kernel_prob: [0.45, 0.12, 0.12]
    sinc_prob: 0.1
    blur_sigma: [0.1, 1]
    betag_range: [0.1, 2]
    betap_range: [1, 2]

    blur_kernel_size2: 5
    kernel_list2: ['iso', 'generalized_iso', 'plateau_iso']
    kernel_prob2: [0.45, 0.12, 0.12]
    sinc_prob2: 0.05
    blur_sigma2: [0.1, 1]
    betag_range2: [0.1, 2]
    betap_range2: [1, 2]
    
    final_sinc_prob: 0.2

    gt_size: 32
    use_hflip: False
    use_rot: False
    
    num_worker_per_gpu: 4
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 1
    prefetch_mode: ~
    
  val:
    name: validation
    type: PairedImageDataset
    dataroot_gt: /home/phips/Documents/musl/traiNNer-redux/datasets/jpg
    dataroot_lq: /home/phips/Documents/musl/traiNNer-redux/datasets/jpg
    io_backend:
      type: disk

network_g:
  type: OmniSRNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  upsampling: 1
  res_num: 5
  block_num: 1
  bias: True
  block_script_name: OSA
  block_class_name: OSA_Block
  window_size: 8
  pe: True
  ffn_bias: True

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64

path:
  pretrain_network_g: /home/phips/Documents/traiNNer-redux-FJ/experiments/pretrained_models/net_g_439000.pth
  param_key_g: params_ema
  strict_load_g: true
  pretrain_network_d:
  param_key_d: params_ema
  strict_load_d: true
  resume_state: ~

train:
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: AdamW
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [300000, 500000, 650000, 700000, 750000]
    gamma: 0.5

  total_iter: 800000
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      "conv1_2": 0.1
      "conv2_2": 0.1
      "conv3_4": 1
      "conv4_4": 1
      "conv5_4": 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1
  # contextual loss
  contextual_opt:
    type: ContextualLoss
    loss_weight: 0.5
    layer_weights:
      "conv_3_2": 1
      "conv_4_2": 1
    max_1d_size: 64
    distance_type: "cosine"
    calc_type: "regular"
    z_norm: false
    crop_quarter: false,
    b: 1.0
    band_width: 0.5
    use_vgg: true,
    net: vgg19
  color_opt:
    type: ColorLoss
    criterion: "l1"
    loss_weight: 1.0
  avg_opt:
    type: AverageLoss
    criterion: "l1"
    loss_weight: 1.0
    scale: 1
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0
  
val:
  val_freq: 1000
  save_img: True

  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
      
logger:
  print_freq: 100
  save_checkpoint_freq: 1000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
