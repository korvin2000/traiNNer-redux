
# general settings
name: train_ESWTGANModel_SRx4_scratch_P48W8_DIV2K_500k_B4G8
model_type: GeneralGANModel
scale: 4
num_gpu: auto
manual_seed: 0
# ----------------- options for synthesizing training data in ESWTGANModel ----------------- #
# USM the ground-truth
l1_gt_usm: False
percep_gt_usm: False
gan_gt_usm: False
gt_usm: False
high_order_degradation : True
try_autoamp_g: True #enable amp Automatic mixed precision for network_g. if loss inf or nan or error just set to False
try_autoamp_d: True #enable amp Automatic mixed precision for network_d. if loss inf or nan or error just set to False

# the first degradation process
resize_prob: [0.2, 0.7, 0.1]  # up, down, keep
resize_range: [0.9, 1.2]
gaussian_noise_prob: 0.5
noise_range: [0, 5]
poisson_scale_range: [0, 0]
gray_noise_prob: 1
jpeg_range: [75, 95]

# the second degradation process
second_blur_prob: 0.8
resize_prob2: [0.3, 0.4, 0.3]  # up, down, keep
resize_range2: [0.9, 1.2]
gaussian_noise_prob2: 0.2
noise_range2: [0, 5]
poisson_scale_range2: [0, 0]
gray_noise_prob2: 1
jpeg_range2: [70, 95]

gt_size: 256
queue_size: 160

# dataset and data loader settings
datasets:
  train:
    # name: DIV2K
    # type: PairedImageDataset
    # dataroot_gt: datasets/DIV2K/DIV2K_train_HR_sub
    # dataroot_lq: datasets/DIV2K/DIV2K_train_LR_bicubic/X4_sub
    # io_backend:
    #   type: disk

    name: Manga-23-4-20
    type: RealESRGANDataset
    dataroot_gt: C:/Users/FloatingDream/Downloads/Python/Real-ESRGAN/scripts
    meta_info: C:/Users/FloatingDream/Downloads/Python/Real-ESRGAN/scripts/meta_info_DF2Kmultiscale.txt
    io_backend:
      type: disk

    blur_kernel_size: 13
    kernel_list:
      [
        "iso",
        "aniso",
        "generalized_iso",
        "generalized_aniso",
        "plateau_iso",
        "plateau_aniso",
      ]
    kernel_prob: [0.65, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 11
    kernel_list2:
      [
        "iso",
        "aniso",
        "generalized_iso",
        "generalized_aniso",
        "plateau_iso",
        "plateau_aniso",
      ]
    kernel_prob2: [0.65, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.5
    gt_size: 256
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # val_1:
  #   name: MY
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
  #   dataroot_lq: datasets/DIV2K/DIV2K_valid_LR_bicubic/X4
  #   io_backend:
  #     type: disk

  # val_2:
  #   name: Set5
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/Benchmark/HR/Set5/x4
  #   dataroot_lq: datasets/Benchmark/LR/Set5/x4
  #   io_backend:
  #     type: disk
  val:
    name: validation
    type: PairedImageDataset
    dataroot_gt: C:/Users/FloatingDream/Downloads/Python/Real-ESRGAN/scripts/real-subreal-sub-HR-x4
    dataroot_lq: C:/Users/FloatingDream/Downloads/Python/Real-ESRGAN/scripts/real-subreal-sub
    io_backend:
      type: disk
# network structures
network_g:

  # type: RRDBNet
  # num_in_ch: 3
  # num_out_ch: 3
  # num_feat: 64
  # num_block: 23
  # num_grow_ch: 32

  # type: SwinIR
  # upscale: 4
  # in_chans: 3
  # img_size: 48
  # window_size: 8
  # img_range: 1.
  # depths: [6, 6, 6, 6, 6, 6]
  # embed_dim: 180
  # num_heads: [6, 6, 6, 6, 6, 6]
  # mlp_ratio: 2
  # upsampler: 'pixelshuffle'
  # resi_connection: '1conv'

  # type: HAT
  # upscale: 4
  # in_chans: 3
  # img_size: 64
  # window_size: 16
  # compress_ratio: 3
  # squeeze_factor: 30
  # conv_scale: 0.01
  # overlap_ratio: 0.5
  # img_range: 1.
  # depths: [6, 6, 6, 6, 6, 6]
  # embed_dim: 180
  # num_heads: [6, 6, 6, 6, 6, 6]
  # mlp_ratio: 2
  # upsampler: 'pixelshuffle'
  # resi_connection: '1conv'

  # type: OmniSRNet
  # num_in_ch: 3
  # num_out_ch: 3
  # num_feat: 64
  # upsampling: 4
  # res_num: 5
  # block_num: 1
  # bias: True
  # block_script_name: OSA
  # block_class_name: OSA_Block
  # window_size: 8
  # pe: True
  # ffn_bias: True


  ## GRL base
  # type: GRL
  # upscale: 4
  # in_channels: 3
  # embed_dim: 180
  # img_range: 1.
  # img_size: 160 #input image size = gt_size/upscale = 640/4=160
  # upsampler: pixelshuffle
  # depths: [4, 4, 8, 8, 8, 4, 4]
  # num_heads_window: [3, 3, 3, 3, 3, 3, 3]
  # num_heads_stripe: [3, 3, 3, 3, 3, 3, 3]
  # window_size: 8
  # stripe_size: [8, null]
  # stripe_groups: [null, 4]
  # stripe_shift: True
  # mlp_ratio: 2
  # qkv_proj_type: "linear"
  # anchor_proj_type: "avgpool"
  # anchor_one_stage: True
  # anchor_window_down_factor: 4
  # out_proj_type: "linear"
  # conv_type: "1conv"
  # init_method: "n"
  # fairscale_checkpoint: False
  # offload_to_cpu: False
  # double_window: False
  # stripe_square: False
  # separable_conv_act: True
  # local_connection: True
  # use_buffer: True
  # use_efficient_buffer: True
  # euclidean_dist: False

  ## GRL small
  # type: GRL
  # upscale: 4
  # in_channels: 3
  # embed_dim: 128
  # img_range: 1.
  # img_size: 160 #input image size = gt_size/upscale = 640/4=160
  # upsampler: pixelshuffle
  # depths: [4, 4, 4, 4]
  # num_heads_window: [2, 2, 2, 2]
  # num_heads_stripe: [2, 2, 2, 2]
  # window_size: 8
  # stripe_size: [8, null]
  # stripe_groups: [null, 4]
  # stripe_shift: True
  # mlp_ratio: 2
  # qkv_proj_type: "linear"
  # anchor_proj_type: "avgpool"
  # anchor_one_stage: True
  # anchor_window_down_factor: 4
  # out_proj_type: "linear"
  # conv_type: "1conv"
  # init_method: "n"
  # fairscale_checkpoint: False
  # offload_to_cpu: False
  # double_window: False
  # stripe_square: False
  # separable_conv_act: True
  # local_connection: False
  # use_buffer: True
  # use_efficient_buffer: True
  # euclidean_dist: False

  ## GRL tiny
  # type: GRL
  # upscale: 4
  # in_channels: 3
  # embed_dim: 64
  # img_range: 1.
  # img_size: 160 #input image size = gt_size/upscale = 640/4=160
  # upsampler: pixelshuffledirect
  # depths: [4, 4, 4, 4]
  # num_heads_window: [2, 2, 2, 2]
  # num_heads_stripe: [2, 2, 2, 2]
  # window_size: 8
  # stripe_size: [8, null]
  # stripe_groups: [null, 4]
  # stripe_shift: True
  # mlp_ratio: 2
  # qkv_proj_type: "linear"
  # anchor_proj_type: "avgpool"
  # anchor_one_stage: True
  # anchor_window_down_factor: 4
  # out_proj_type: "linear"
  # conv_type: "1conv"
  # init_method: "n"
  # fairscale_checkpoint: False
  # offload_to_cpu: False
  # double_window: False
  # stripe_square: False
  # separable_conv_act: True
  # local_connection: False
  # use_buffer: True
  # use_efficient_buffer: True
  # euclidean_dist: False

  ## ESWT-24-6_LSR
  type: ESWT
  upscale: 4
  n_t: 6
  n_g: 3
  dim: 60
  num_in_ch: 3
  num_out_ch: 3
  task: lsr
  num_heads: 1
  window_list: !!python/tuple [ [24, 6], [6, 24] ]
  shift_list: !!python/tuple [ [12, 3], [3, 12] ]

  ## ESWT-12-12_LSR
  # type: ESWT
  # upscale: 4
  # n_t: 6
  # n_g: 3
  # dim: 60
  # num_in_ch: 3
  # num_out_ch: 3
  # task: lsr
  # num_heads: 1
  # window_list: !!python/tuple [ [12, 12], [12, 12] ]
  # shift_list: !!python/tuple [ [6, 6], [6, 6] ]

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  pretrain_network_g: #experiments/pretrained_models/ESWT-24-6_LSR_x4.pth
  param_key_g: params_ema
  strict_load_g: false
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [400000] #at these iterations it will reduce the learning rate.
    gamma: 0.5


  total_iter: 400000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      "conv1_2": 0.1
      "conv2_2": 0.1
      "conv3_4": 1
      "conv4_4": 1
      "conv5_4": 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l1
  # contextual loss
  contextual_opt:
    type: ContextualLoss
    loss_weight: 0.5
    layer_weights:
      "conv_3_2": 1
      "conv_4_2": 1
    max_1d_size: 64
    distance_type: "cosine"
    calc_type: "regular"
    z_norm: false
    crop_quarter: false,
    b: 1.0
    band_width: 0.5
    use_vgg: true,
    net: vgg19
  color_opt:
    type: ColorLoss
    criterion: "l1"
    loss_weight: 1.0
  avg_opt:
    type: AverageLoss
    criterion: "l1"
    loss_weight: 1.0
    scale: 4
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0

# validation settings
val:
  val_freq: !!float 1e3
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
    ssim:
      # Metric type. Usually the function name defined in the`basicsr/metrics` folder
      type: calculate_ssim
      #### The following arguments are flexible and can be obtained in the corresponding doc
      # Whether to crop border during validation
      crop_border: 4
      # Whether to convert to Y(CbCr) for validation
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
