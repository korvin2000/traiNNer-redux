# GENERATE TIME: Tue Aug 29 14:08:18 2023
# CMD:
# train.py -opt options\train\OmniSR\4x_train_OmniSRGAN_plus.yml

# general settings
name: omnidescreenton
model_type: OmniSRGANModel
scale: 1
num_gpu: auto # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0

# ----------------- options for synthesizing training data in OmniSRGANModel ----------------- #
# USM the ground-truth
l1_gt_usm: False
percep_gt_usm: False
gan_gt_usm: False
high_order_degradation: False

gt_size: 128
queue_size: 128

# dataset and data loader settings
datasets:
  train:
    name: Manga-23-4-20
    type: PairedImageDataset
    dataroot_gt: E:\dataset\hehe
    dataroot_lq: E:\dataset\33331
    #meta_info: 
    io_backend:
      type: disk

    blur_kernel_size: 13
    kernel_list:
      [
        "iso",
        "aniso",
        "generalized_iso",
        "generalized_aniso",
        "plateau_iso",
        "plateau_aniso",
      ]
    kernel_prob: [0.65, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob: 0.1
    blur_sigma: [0.2, 3]
    betag_range: [0.5, 4]
    betap_range: [1, 2]

    blur_kernel_size2: 11
    kernel_list2:
      [
        "iso",
        "aniso",
        "generalized_iso",
        "generalized_aniso",
        "plateau_iso",
        "plateau_aniso",
      ]
    kernel_prob2: [0.65, 0.25, 0.12, 0.03, 0.12, 0.03]
    sinc_prob2: 0.1
    blur_sigma2: [0.2, 1.5]
    betag_range2: [0.5, 4]
    betap_range2: [1, 2]

    final_sinc_prob: 0.2

    gt_size: 128
    use_hflip: True
    use_rot: False

    
    # data loader
    use_shuffle: True
    num_worker_per_gpu: 6
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # Uncomment these for validation
  val:
    name: validation
    type: PairedImageDataset
    dataroot_gt: C:\Users\umzi sister\Desktop\TEST\HQ
    dataroot_lq: C:\Users\umzi sister\Desktop\TEST\LQ
    io_backend:
      type: disk

# network structures
network_g:
  type: OmniSRNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  upsampling: 1
  res_num: 5
  block_num: 1
  bias: True
  block_script_name: OSA
  block_class_name: OSA_Block
  window_size: 8
  pe: True
  ffn_bias: True

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  #skip_connection: True

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: 
  param_key_g: params_ema
  strict_load_g: false
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: AdamW
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [400000]
    gamma: 0.5

  total_iter: 400000
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      "conv1_2": 0.1
      "conv2_2": 0.1
      "conv3_4": 1
      "conv4_4": 1
      "conv5_4": 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 0.02
    style_weight: 0
    range_norm: false
    criterion: l1
  # contextual loss
  contextual_opt:
    type: ContextualLoss
    loss_weight: 0.2
    layer_weights:
      "conv_3_2": 0.15
      "conv_4_2": 0.15
    max_1d_size: 64
    distance_type: "cosine"
    calc_type: "regular"
    z_norm: false
    crop_quarter: false,
    b: 1.0
    band_width: 0.5
    use_vgg: true,
    net: vgg19
  color_opt:
    type: ColorLoss
    criterion: "l1"
    loss_weight: 1.0
  avg_opt:
    type: AverageLoss
    criterion: "l1"
    loss_weight: 1.0
    scale: 4
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0

# Uncomment these for validation
# validation settings
val:
  val_freq: 1000
  save_img: True

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: 1000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
