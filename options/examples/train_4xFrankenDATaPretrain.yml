
name: 4xFrankenDATaPretrain
model_type: default
scale: 4
num_gpu: 1
use_amp: true
bfloat16: true
compile: false
#manual_seed: 1024

datasets:
  train:
    type: paired
    dataroot_gt: 'D:/Frankendata/HR'
    dataroot_lq: 'D:/Frankendata/LR'
    #meta_info: 'datasets/meta_info.txt'
    io_backend:
      type: disk

    gt_size: 128
    batch_size: 10
    use_hflip: true
    use_rot: true
    num_worker_per_gpu: 4
    dataset_enlarge_ratio: 1

  val:
    name: val_1
    type: paired
    dataroot_gt: 'D:/validation/4xLSDIR_Trimmed_val/HR'
    dataroot_lq: 'D:/validation/4xLSDIR_Trimmed_val/LR'
    io_backend:
      type: disk

path:
  #pretrain_network_g: 'experiments/pretrain.pth'
  #param_key_g: params_ema
  #strict_load_g: false
  resume_state: ~

network_g:
  #type: dat_light
  #type: dat_small
  type: dat_medium
  upscale: 4

network_d:
  type: unet_attn_ms

#print_network: true

train:
  optim_g:
    type: adamw
    lr: !!float 1e-4
    weight_decay: 0.01
    betas: [0.9, 0.99]
    fused: true
  optim_d:
    type: adamw
    lr: !!float 1e-4
    weight_decay: 0.01
    betas: [0.9, 0.99]
    fused: true

  scheduler:
    type: multisteplr
    milestones: [250000, 400000, 450000, 475000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up
  #ema_decay: 0.999

  # losses
  pixel_opt:
    type: HuberLoss
    loss_weight: 1.0
    reduction: mean
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      "conv1_2": 0.1
      "conv2_1": 0.1
      "conv2_2": 0.1
      "conv3_3": 1
      "conv3_4": 1
      "conv4_4": 1
      "conv5_4": 1
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 1.0
    style_weight: 0
    criterion: huber
  gan_opt:
    type: GANLoss
    gan_type: huber
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 1.0
  color_opt:
    type: colorloss
    loss_weight: 1.0
    criterion: huber
  ldl_opt:
    type: HuberLoss
    loss_weight: 1.0
    reduction: mean
  ff_opt:
    type: focalfrequencyloss
    loss_weight: 1.0

  #net_d_iters: 1
  #net_d_init_iters: 0
  
val:
  val_freq: 5000
  save_img: true
  
  metrics:
    psnr:
      type: calculate_psnr
      crop_border: 4
    ssim:
      type: calculate_ssim
      crop_border: 4

logger:
  print_freq: 100
  save_checkpoint_freq: 1000
  use_tb_logger: false
  #wandb:
  #  project: ~
  #  resume_id: ~

# dist training settings
#dist_params:
#  backend: nccl
#  port: 29500
